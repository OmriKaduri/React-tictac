/* istanbul ignore next */'use strict';var /* istanbul ignore next */_historyReducer = require('./historyReducer');
var /* istanbul ignore next */_gameReducer = require('./gameReducer.js');
var /* istanbul ignore next */_lodash = require('lodash'); /* istanbul ignore next */var _ = _interopRequireWildcard(_lodash); /* istanbul ignore next */function _interopRequireWildcard(obj) {if (obj && obj.__esModule) {return obj;} else {var newObj = {};if (obj != null) {for (var key in obj) {if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];}}newObj.default = obj;return newObj;}}

it('Should add squares and update xIsNext and counter', function () {
	var squaresToAdd = _.cloneDeep( /* istanbul ignore next */_gameReducer.initialState.history[0].squares);
	squaresToAdd[0] = 'X';
	var nextState = /* istanbul ignore next */(0, _historyReducer.addHistoryReducer)( /* istanbul ignore next */_gameReducer.initialState, { type: 'ADD_HISTORY_REDUCER', squares: squaresToAdd });
	expect(nextState.history[1].squares[0]).toEqual('X');
	expect(nextState.xIsNext).toEqual(false);
	expect(nextState.current).toEqual(1);
});