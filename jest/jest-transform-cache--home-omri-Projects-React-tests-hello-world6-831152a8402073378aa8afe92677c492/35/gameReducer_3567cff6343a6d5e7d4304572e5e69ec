/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });exports.gameReducer = exports.initialState = undefined;var /* istanbul ignore next */_lodash = require('lodash'); /* istanbul ignore next */var _ = _interopRequireWildcard(_lodash);
var /* istanbul ignore next */_gameSizeReducer = require('./gameSizeReducer.js');
var /* istanbul ignore next */_historyReducer = require('./historyReducer.js'); /* istanbul ignore next */function _interopRequireWildcard(obj) {if (obj && obj.__esModule) {return obj;} else {var newObj = {};if (obj != null) {for (var key in obj) {if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];}}newObj.default = obj;return newObj;}}
var initialState = /* istanbul ignore next */exports.initialState = {
	sideLength: 3,
	history: [{
		squares: Array(Math.pow( /* istanbul ignore next */undefined.props.value, 2)).fill(null) }],

	xIsNext: true,
	current: 0 };


var gameReducer = /* istanbul ignore next */exports.gameReducer = function gameReducer(state, action) {
	switch (action.type) {
		case 'SET_SIDE_LENGTH':
			return (/* istanbul ignore next */(0, _gameSizeReducer.gameSizeReducer)(state, action));
		case 'ADD_HISTORY':
			return (/* istanbul ignore next */(0, _historyReducer.addHistoryReducer)(state, action));
		default:
			return state;}

};